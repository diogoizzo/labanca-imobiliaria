"use client";

import { useState } from "react";
import { useRouter } from "next/navigation";
import { useForm, FieldValues } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import { useCreateProperty, useUpdateProperty } from "@/hooks/propertyHooks";
import {
    PROPERTY_TYPES,
    PRIVATE_AMENITIES,
    COMMON_AMENITIES,
    PrivateAmenity,
    CommonAmenity,
} from "@/constants/propertyConstants";
import {
    PropertyFormValues,
    PropertyFormInput,
    propertySchema,
} from "@/schemas/propertySchema";
import { Tab, Tabs, TabList, TabPanel } from "react-tabs";
import "react-tabs/style/react-tabs.css";
import { FaPlus as Plus, FaTimes as X } from "react-icons/fa";
import { useDropzone } from "react-dropzone";
import Image from "next/image";

interface PropertyFormProps {
    defaultValues?: PropertyFormValues;
}

export default function PropertyForm({ defaultValues }: PropertyFormProps) {
    const [activeTab, setActiveTab] = useState(0);
    const [selectedImages, setSelectedImages] = useState<File[]>([]);
    const [previewImages, setPreviewImages] = useState<string[]>(
        defaultValues?.images?.map((img) => img.url) || []
    );
    const router = useRouter();

    const {
        register,
        handleSubmit,
        formState: { errors },
        setValue,
        watch,
    } = useForm({
        resolver: zodResolver(propertySchema),
        defaultValues: {
            id: defaultValues?.id,
            title: defaultValues?.title || "",
            status: defaultValues?.status || "FOR_SALE",
            type: defaultValues?.type || "APARTMENT",
            price: defaultValues?.price || 0,
            description: defaultValues?.description || "",
            referenceCode: defaultValues?.referenceCode || "",
            street: defaultValues?.street || "",
            number: defaultValues?.number || "",
            neighborhood: defaultValues?.neighborhood || "",
            city: defaultValues?.city || "",
            state: defaultValues?.state || "",
            zipCode: defaultValues?.zipCode || "",
            latitude: defaultValues?.latitude || "",
            longitude: defaultValues?.longitude || "",
            bedrooms: defaultValues?.bedrooms || 0,
            suites: defaultValues?.suites || 0,
            bathrooms: defaultValues?.bathrooms || 0,
            parkingSpaces: defaultValues?.parkingSpaces || 0,
            rooms: defaultValues?.rooms || 0,
            floor: defaultValues?.floor || 0,
            yearBuilt: defaultValues?.yearBuilt || 0,
            age: defaultValues?.age || 0,
            usableArea: defaultValues?.usableArea || 0,
            totalArea: defaultValues?.totalArea || 0,
            condoFee: defaultValues?.condoFee || 0,
            iptu: defaultValues?.iptu || 0,
            privateAmenities: defaultValues?.privateAmenities ?? [],
            commonAmenities: defaultValues?.commonAmenities ?? [],
            petsAllowed: defaultValues?.petsAllowed || false,
            furnished: defaultValues?.furnished || false,
            images: defaultValues?.images ?? [],
        },
    });

    const { mutate: createProperty, isPending: isCreating } =
        useCreateProperty();
    const { mutate: updateProperty, isPending: isUpdating } =
        useUpdateProperty();

    const onSubmit = (data: PropertyFormValues) => {
        const formData = new FormData();

        // Add form fields to FormData
        Object.keys(data).forEach((key) => {
            if (key !== "images") {
                // @ts-ignore - TypeScript doesn't know about the exact keys
                formData.append(key, data[key]);
            }
        });

        // Add images to FormData
        selectedImages.forEach((image, index) => {
            formData.append("images", image);
        });

        if (defaultValues?.id) {
            updateProperty(
                { id: defaultValues.id, data: formData },
                {
                    onSuccess: () => {
                        router.push("/admin/imoveis");
                        router.refresh();
                    },
                }
            );
        } else {
            createProperty(formData, {
                onSuccess: () => {
                    router.push("/admin/imoveis");
                },
            });
        }
    };

    const { getRootProps, getInputProps } = useDropzone({
        accept: {
            "image/*": [],
        },
        maxSize: 20971520, // 20MB
        onDrop: (acceptedFiles) => {
            const newFiles = acceptedFiles;
            const newPreviews = acceptedFiles.map((file) =>
                URL.createObjectURL(file)
            );

            setSelectedImages((prev) => [...prev, ...newFiles]);
            setPreviewImages((prev) => [...prev, ...newPreviews]);
        },
    });

    const removeImage = (index: number) => {
        setSelectedImages((prev) => prev.filter((_, i) => i !== index));
        setPreviewImages((prev) => prev.filter((_, i) => i !== index));
    };

    const togglePrivateAmenity = (amenity: PrivateAmenity) => {
        const currentAmenities = watch("privateAmenities") || [];
        if (currentAmenities.includes(amenity)) {
            setValue(
                "privateAmenities",
                currentAmenities.filter((a: PrivateAmenity) => a !== amenity)
            );
        } else {
            setValue("privateAmenities", [...currentAmenities, amenity]);
        }
    };

    const toggleCommonAmenity = (amenity: CommonAmenity) => {
        const currentAmenities = watch("commonAmenities") || [];
        if (currentAmenities.includes(amenity)) {
            setValue(
                "commonAmenities",
                currentAmenities.filter((a: CommonAmenity) => a !== amenity)
            );
        } else {
            setValue("commonAmenities", [...currentAmenities, amenity]);
        }
    };

    return (
        <form onSubmit={handleSubmit(onSubmit)} className="submit-section">
            <Tabs
                selectedIndex={activeTab}
                onSelect={(index) => setActiveTab(index)}
            >
                <TabList className="nav nav-tabs">
                    <Tab className="nav-item">
                        <span className="nav-link">Dados Gerais</span>
                    </Tab>
                    <Tab className="nav-item">
                        <span className="nav-link">Localização</span>
                    </Tab>
                    <Tab className="nav-item">
                        <span className="nav-link">Características</span>
                    </Tab>
                    <Tab className="nav-item">
                        <span className="nav-link">Amenidades & Fotos</span>
                    </Tab>
                </TabList>

                {/* Dados Gerais Tab */}
                <TabPanel>
                    <div className="row">
                        <div className="form-group col-md-12">
                            <label>Título do Imóvel *</label>
                            <input
                                type="text"
                                className={`form-control ${
                                    errors.title ? "is-invalid" : ""
                                }`}
                                {...register("title")}
                            />
                            {errors.title && (
                                <div className="invalid-feedback">
                                    {errors.title.message}
                                </div>
                            )}
                        </div>

                        <div className="form-group col-md-6">
                            <label>Status *</label>
                            <select
                                className={`form-control ${
                                    errors.status ? "is-invalid" : ""
                                }`}
                                {...register("status")}
                            >
                                <option value="FOR_RENT">Para Alugar</option>
                                <option value="FOR_SALE">Para Venda</option>
                            </select>
                            {errors.status && (
                                <div className="invalid-feedback">
                                    {errors.status.message}
                                </div>
                            )}
                        </div>

                        <div className="form-group col-md-6">
                            <label>Tipo de Imóvel *</label>
                            <select
                                className={`form-control ${
                                    errors.type ? "is-invalid" : ""
                                }`}
                                {...register("type")}
                            >
                                {PROPERTY_TYPES.map((type) => (
                                    <option key={type} value={type}>
                                        {type}
                                    </option>
                                ))}
                            </select>
                            {errors.type && (
                                <div className="invalid-feedback">
                                    {errors.type.message}
                                </div>
                            )}
                        </div>

                        <div className="form-group col-md-6">
                            <label>Preço *</label>
                            <input
                                type="number"
                                className={`form-control ${
                                    errors.price ? "is-invalid" : ""
                                }`}
                                {...register("price", { valueAsNumber: true })}
                            />
                            {errors.price && (
                                <div className="invalid-feedback">
                                    {errors.price.message}
                                </div>
                            )}
                        </div>

                        <div className="form-group col-md-6">
                            <label>Código de Referência</label>
                            <input
                                type="text"
                                className="form-control"
                                {...register("referenceCode")}
                            />
                        </div>

                        <div className="form-group col-md-12">
                            <label>Descrição</label>
                            <textarea
                                className={`form-control h-120 ${
                                    errors.description ? "is-invalid" : ""
                                }`}
                                {...register("description")}
                            ></textarea>
                            {errors.description && (
                                <div className="invalid-feedback">
                                    {errors.description.message}
                                </div>
                            )}
                        </div>
                    </div>
                </TabPanel>

                {/* Localização Tab */}
                <TabPanel>
                    <div className="row">
                        <div className="form-group col-md-6">
                            <label>Rua</label>
                            <input
                                type="text"
                                className="form-control"
                                {...register("street")}
                            />
                        </div>

                        <div className="form-group col-md-6">
                            <label>Número</label>
                            <input
                                type="text"
                                className="form-control"
                                {...register("number")}
                            />
                        </div>

                        <div className="form-group col-md-6">
                            <label>Bairro</label>
                            <input
                                type="text"
                                className="form-control"
                                {...register("neighborhood")}
                            />
                        </div>

                        <div className="form-group col-md-6">
                            <label>Cidade</label>
                            <input
                                type="text"
                                className="form-control"
                                {...register("city")}
                            />
                        </div>

                        <div className="form-group col-md-6">
                            <label>Estado</label>
                            <input
                                type="text"
                                className="form-control"
                                {...register("state")}
                            />
                        </div>

                        <div className="form-group col-md-6">
                            <label>CEP</label>
                            <input
                                type="text"
                                className="form-control"
                                {...register("zipCode")}
                            />
                        </div>

                        <div className="form-group col-md-6">
                            <label>Latitude</label>
                            <input
                                type="text"
                                className="form-control"
                                {...register("latitude")}
                            />
                        </div>

                        <div className="form-group col-md-6">
                            <label>Longitude</label>
                            <input
                                type="text"
                                className="form-control"
                                {...register("longitude")}
                            />
                        </div>
                    </div>
                </TabPanel>

                {/* Características Tab */}
                <TabPanel>
                    <div className="row">
                        <div className="form-group col-md-6">
                            <label>Quartos</label>
                            <input
                                type="number"
                                className="form-control"
                                {...register("bedrooms", {
                                    valueAsNumber: true,
                                })}
                            />
                        </div>

                        <div className="form-group col-md-6">
                            <label>Suítes</label>
                            <input
                                type="number"
                                className="form-control"
                                {...register("suites", { valueAsNumber: true })}
                            />
                        </div>

                        <div className="form-group col-md-6">
                            <label>Banheiros</label>
                            <input
                                type="number"
                                className="form-control"
                                {...register("bathrooms", {
                                    valueAsNumber: true,
                                })}
                            />
                        </div>

                        <div className="form-group col-md-6">
                            <label>Vagas de Garagem</label>
                            <input
                                type="number"
                                className="form-control"
                                {...register("parkingSpaces", {
                                    valueAsNumber: true,
                                })}
                            />
                        </div>

                        <div className="form-group col-md-6">
                            <label>Cômodos</label>
                            <input
                                type="number"
                                className="form-control"
                                {...register("rooms", { valueAsNumber: true })}
                            />
                        </div>

                        <div className="form-group col-md-6">
                            <label>Andar</label>
                            <input
                                type="number"
                                className="form-control"
                                {...register("floor", { valueAsNumber: true })}
                            />
                        </div>

                        <div className="form-group col-md-6">
                            <label>Ano de Construção</label>
                            <input
                                type="number"
                                className="form-control"
                                {...register("yearBuilt", {
                                    valueAsNumber: true,
                                })}
                            />
                        </div>

                        <div className="form-group col-md-6">
                            <label>Idade do Imóvel</label>
                            <input
                                type="number"
                                className="form-control"
                                {...register("age", { valueAsNumber: true })}
                            />
                        </div>

                        <div className="form-group col-md-6">
                            <label>Área Utilizável (m²)</label>
                            <input
                                type="number"
                                className="form-control"
                                {...register("usableArea", {
                                    valueAsNumber: true,
                                })}
                            />
                        </div>

                        <div className="form-group col-md-6">
                            <label>Área Total (m²)</label>
                            <input
                                type="number"
                                className="form-control"
                                {...register("totalArea", {
                                    valueAsNumber: true,
                                })}
                            />
                        </div>

                        <div className="form-group col-md-6">
                            <label>Condomínio (R$)</label>
                            <input
                                type="number"
                                className="form-control"
                                {...register("condoFee", {
                                    valueAsNumber: true,
                                })}
                            />
                        </div>

                        <div className="form-group col-md-6">
                            <label>IPTU (R$)</label>
                            <input
                                type="number"
                                className="form-control"
                                {...register("iptu", { valueAsNumber: true })}
                            />
                        </div>
                    </div>
                </TabPanel>

                {/* Amenidades & Fotos Tab */}
                <TabPanel>
                    <div className="row">
                        <div className="col-md-6">
                            <h5>Amenidades Privativas</h5>
                            <div className="amenities-checkboxes">
                                {PRIVATE_AMENITIES.map((amenity) => (
                                    <div key={amenity} className="form-check">
                                        <input
                                            type="checkbox"
                                            className="form-check-input"
                                            id={`private-${amenity}`}
                                            checked={watch(
                                                "privateAmenities"
                                            )?.includes(amenity)}
                                            onChange={() =>
                                                togglePrivateAmenity(amenity)
                                            }
                                        />
                                        <label
                                            className="form-check-label"
                                            htmlFor={`private-${amenity}`}
                                        >
                                            {amenity}
                                        </label>
                                    </div>
                                ))}
                            </div>
                        </div>

                        <div className="col-md-6">
                            <h5>Amenidades Comuns</h5>
                            <div className="amenities-checkboxes">
                                {COMMON_AMENITIES.map((amenity) => (
                                    <div key={amenity} className="form-check">
                                        <input
                                            type="checkbox"
                                            className="form-check-input"
                                            id={`common-${amenity}`}
                                            checked={watch(
                                                "commonAmenities"
                                            )?.includes(amenity)}
                                            onChange={() =>
                                                toggleCommonAmenity(amenity)
                                            }
                                        />
                                        <label
                                            className="form-check-label"
                                            htmlFor={`common-${amenity}`}
                                        >
                                            {amenity}
                                        </label>
                                    </div>
                                ))}
                            </div>
                        </div>

                        <div className="col-md-6 mt-3">
                            <div className="form-check form-switch">
                                <input
                                    type="checkbox"
                                    className="form-check-input"
                                    id="petsAllowed"
                                    {...register("petsAllowed")}
                                />
                                <label
                                    className="form-check-label"
                                    htmlFor="petsAllowed"
                                >
                                    Aceita Animais
                                </label>
                            </div>
                        </div>

                        <div className="col-md-6 mt-3">
                            <div className="form-check form-switch">
                                <input
                                    type="checkbox"
                                    className="form-check-input"
                                    id="furnished"
                                    {...register("furnished")}
                                />
                                <label
                                    className="form-check-label"
                                    htmlFor="furnished"
                                >
                                    Mobiliado
                                </label>
                            </div>
                        </div>

                        <div className="col-md-12 mt-4">
                            <h5>Fotos do Imóvel</h5>
                            <div
                                {...getRootProps()}
                                className="dropzone dz-clickable primary-dropzone"
                                style={{
                                    border: "2px dashed #007bff",
                                    borderRadius: "8px",
                                    padding: "20px",
                                    textAlign: "center",
                                    cursor: "pointer",
                                }}
                            >
                                <input {...getInputProps()} />
                                <div className="dz-message">
                                    <i
                                        className="ti-gallery"
                                        style={{ fontSize: "48px" }}
                                    ></i>
                                    <p>
                                        Arraste e solte fotos aqui ou clique
                                        para selecionar
                                    </p>
                                    <small className="text-muted">
                                        Tamanho máximo: 20MB por imagem
                                    </small>
                                </div>
                            </div>

                            {/* Image Previews */}
                            {previewImages.length > 0 && (
                                <div className="row mt-3">
                                    <h6>
                                        Pré-visualização ({previewImages.length}{" "}
                                        imagem(ns))
                                    </h6>
                                    <div className="d-flex flex-wrap gap-2">
                                        {previewImages.map((preview, index) => (
                                            <div
                                                key={index}
                                                className="position-relative"
                                            >
                                                <Image
                                                    src={preview}
                                                    alt={`Preview ${index + 1}`}
                                                    width={100}
                                                    height={100}
                                                    style={{
                                                        objectFit: "cover",
                                                        borderRadius: "4px",
                                                    }}
                                                />
                                                <button
                                                    type="button"
                                                    className="btn btn-sm btn-danger position-absolute"
                                                    style={{
                                                        top: "0",
                                                        right: "0",
                                                    }}
                                                    onClick={() =>
                                                        removeImage(index)
                                                    }
                                                >
                                                    <X size={12} />
                                                </button>
                                            </div>
                                        ))}
                                    </div>
                                </div>
                            )}
                        </div>
                    </div>
                </TabPanel>
            </Tabs>

            <div className="form-group col-lg-12 mt-4">
                <button
                    type="submit"
                    className="btn btn-primary px-5 rounded"
                    disabled={isCreating || isUpdating}
                >
                    {isCreating || isUpdating ? (
                        <>
                            <span
                                className="spinner-border spinner-border-sm"
                                role="status"
                                aria-hidden="true"
                            ></span>{" "}
                            {defaultValues?.id
                                ? "Atualizando..."
                                : "Criando..."}
                        </>
                    ) : defaultValues?.id ? (
                        "Atualizar Imóvel"
                    ) : (
                        "Publicar Imóvel"
                    )}
                </button>
            </div>
        </form>
    );
}
